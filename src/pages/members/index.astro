---
import MainLayout from "../../layouts/MainLayout.astro";
import { db } from "../../lib/db.js";

// Fetch users
const users = await db.user.findMany();

// Get sort parameter from URL
const url = Astro.url;
const sortParam = url.searchParams.get('sort') || 'posts';
const searchQuery = url.searchParams.get('search') || '';

// Filter members if search query exists
if (searchQuery) {
  users = users.filter(user =>
    user.username.toLowerCase().includes(searchQuery.toLowerCase())
  );
}

// Sort members based on parameter
switch(sortParam) {
  case 'username':
    users.sort((a, b) => a.username.localeCompare(b.username));
    break;
  case 'joinDate':
    users.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));
    break;
  case 'lastActive':
    users.sort((a, b) => new Date(b.lastActive) - new Date(a.lastActive));
    break;
  case 'posts':
  default:
    users.sort((a, b) => b.postsCount - a.postsCount);
    break;
}

// Pagination
const membersPerPage = 10;
const currentPage = parseInt(url.searchParams.get('page') || '1');
const totalPages = Math.ceil(users.length / membersPerPage);
const paginatedUsers = users.slice(
  (currentPage - 1) * membersPerPage,
  currentPage * membersPerPage
);

// Generate pagination links
const getPageUrl = (page) => {
  const params = new URLSearchParams(url.searchParams);
  params.set('page', page.toString());
  return `?${params.toString()}`;
};
---

<MainLayout title="Members" activeNav="members">
  <div class="breadcrumbs">
    <a href="/">Home</a> &raquo; Members
  </div>

  <div class="members-page">
    <h1>Forum Members</h1>

    <div class="member-search">
      <form action="/members/search" method="GET">
        <input
          type="text"
          name="username"
          placeholder="Search members..."
          class="form-control"
        />
        <button type="submit" class="btn btn-primary">Search</button>
      </form>
    </div>

    <div class="members-list">
      <div class="members-grid">
        {paginatedUsers.map(user => (
          <div class="member-card">
            <div class="member-avatar">
              <img
                src={user.avatarUrl || "/images/avatars/default.png"}
                alt={user.username}
              />
            </div>
            <div class="member-info">
              <h3 class="member-name">{user.username}</h3>
              <p class="member-posts">Posts: {user.postsCount}</p>
              <p class="member-joined">Joined: {new Date(user.createdAt).toLocaleDateString()}</p>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>

  {totalPages > 1 && (
    <div class="paginator">
      {currentPage > 1 && (
        <a href={getPageUrl(currentPage - 1)}>&laquo; Prev</a>
      )}

      {[...Array(totalPages)].map((_, i) => (
        <a
          href={getPageUrl(i + 1)}
          class={currentPage === i + 1 ? 'current' : ''}
        >
          {i + 1}
        </a>
      ))}

      {currentPage < totalPages && (
        <a href={getPageUrl(currentPage + 1)}>Next &raquo;</a>
      )}
    </div>
  )}
</MainLayout>

<style>
  .members-page {
    max-width: 1000px;
    margin: 0 auto;
  }

  h1 {
    margin-bottom: 1.5rem;
    color: var(--secondary-color);
    border-bottom: 1px solid var(--border-color);
    padding-bottom: 0.5rem;
  }

  .member-search {
    margin-bottom: 2rem;
    background-color: var(--forum-category-bg);
    padding: 1.5rem;
    border-radius: var(--border-radius-md);
    box-shadow: var(--shadow-sm);
  }

  .member-search form {
    display: flex;
    gap: 1rem;
  }

  .member-search .form-control {
    flex: 1;
  }

  .members-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
  }

  .member-card {
    display: flex;
    align-items: center;
    background-color: var(--forum-category-bg);
    padding: 1rem;
    border-radius: var(--border-radius-md);
    box-shadow: var(--shadow-sm);
    transition: transform var(--transition-speed) ease, box-shadow var(--transition-speed) ease;
  }

  .member-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow-md);
  }

  .member-avatar {
    margin-right: 1rem;
  }

  .member-avatar img {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    border: 3px solid var(--primary-color);
    background-color: var(--container-bg);
    padding: 2px;
  }

  .member-info {
    flex: 1;
  }

  .member-name {
    color: var(--link-color);
    margin: 0 0 0.5rem;
    font-size: 1.1rem;
  }

  .member-posts, .member-joined {
    margin: 0;
    font-size: 0.9rem;
    color: var(--text-color);
    opacity: 0.9;
  }

  @media (max-width: 768px) {
    .member-search form {
      flex-direction: column;
    }

    .members-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
