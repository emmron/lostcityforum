---
import MainLayout from '../layouts/MainLayout.astro';
import '../styles/auth.css';
import { db } from '../lib/db.js';

// Initialize variables
let errorMessage = '';
let formData = {
  username: '',
  email: '',
  password: ''
};

// Handle form submission
if (Astro.request.method === 'POST') {
  try {
    const data = await Astro.request.formData();
    const username = data.get('username')?.toString();
    const email = data.get('email')?.toString();
    const password = data.get('password')?.toString();
    const confirmPassword = data.get('confirm-password')?.toString();

    // Save form data to repopulate form in case of errors
    formData = { username: username || '', email: email || '', password: '' };

    // Validate input
    if (!username || !email || !password || !confirmPassword) {
      errorMessage = 'All fields are required';
    } else if (password !== confirmPassword) {
      errorMessage = 'Passwords do not match';
    } else {
      // Check if username is already taken
      const existingUsername = await db.user.findByUsername(username);
      if (existingUsername) {
        errorMessage = 'Username is already taken';
      } else {
        // Check if email is already taken
        const existingEmail = await db.user.findByEmail(email);
        if (existingEmail) {
          errorMessage = 'Email is already registered';
        } else {
          // Create the user
          try {
            await db.user.create({
              username,
              email,
              password
            });

            // Redirect to login page with success message
            return Astro.redirect('/login?registered=true');
          } catch (error) {
            console.error('User creation error:', error);
            errorMessage = 'An error occurred while creating your account. Please try again.';
          }
        }
      }
    }
  } catch (error) {
    console.error('Registration error:', error);
    errorMessage = 'An error occurred during registration. Please try again.';
  }
}
---

<MainLayout title="Register">
  <div class="breadcrumbs">
    <a href="/">Home</a> &raquo; Register
  </div>

  <div class="auth-form-container">
    <h1>Create Your Account</h1>

    {errorMessage && (
      <div class="alert alert-error">
        {errorMessage}
      </div>
    )}

    <form method="POST" class="auth-form" enctype="multipart/form-data">
      <div class="form-group">
        <label for="username">Username</label>
        <input type="text" id="username" name="username" required class="form-control" value={formData.username}>
      </div>
      <div class="form-group">
        <label for="email">Email</label>
        <input type="email" id="email" name="email" required class="form-control" value={formData.email}>
      </div>
      <div class="form-group">
        <label for="password">Password</label>
        <input type="password" id="password" name="password" required class="form-control">
      </div>
      <div class="form-group">
        <label for="confirm-password">Confirm Password</label>
        <input type="password" id="confirm-password" name="confirm-password" required class="form-control">
        <div id="confirm-password-error" class="error-message"></div>
      </div>
      <div class="form-group">
        <button type="submit" class="btn btn-primary">Register</button>
      </div>
      <p class="form-footer">
        Already have an account? <a href="/login">Login here</a>
      </p>
    </form>
  </div>

  <script>
    const form = document.querySelector('.auth-form');
    const passwordInput = document.getElementById('password');
    const confirmPasswordInput = document.getElementById('confirm-password');
    const confirmPasswordError = document.getElementById('confirm-password-error');

    form.addEventListener('submit', (event) => {
      confirmPasswordError.textContent = ''; // Clear previous errors
      if (passwordInput.value !== confirmPasswordInput.value) {
        event.preventDefault(); // Stop form submission
        confirmPasswordError.textContent = 'Passwords do not match!'; // Display error
        confirmPasswordInput.focus();
      }
    });
  </script>

  <style>
    .error-message {
      color: red;
      font-size: 12px;
      margin-top: 5px;
    }

    .alert {
      padding: 15px;
      margin-bottom: 20px;
      border: 1px solid transparent;
      border-radius: 4px;
    }

    .alert-error {
      color: #721c24;
      background-color: #f8d7da;
      border-color: #f5c6cb;
    }
  </style>

</MainLayout>