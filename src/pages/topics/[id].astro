---
import MainLayout from "../../layouts/MainLayout.astro";
import { db } from "../../lib/db.js";

// Set to server-rendering instead of static generation
export const prerender = false;

// The original getStaticPaths function can be removed since we're using server-side rendering
// export async function getStaticPaths() {
//   // For SSG, we need to fetch all topics in advance
//   // In a real app with many topics, you might want to use SSR instead with Astro.params
//   return [{ params: { id: "1" } }]; // Just support the initial welcome topic for now
// }

const { id } = Astro.params;

// Increment view count
await db.topic.incrementViews(Number(id));

// Fetch topic data from database
const topic = await db.topic.getById(Number(id));

// If the topic doesn't exist, show 404
if (!topic) {
  return Astro.redirect('/404');
}

// Get forum information for breadcrumbs
const forumId = topic.forum.id;
const forumTitle = topic.forum.title;
---

<MainLayout title={topic?.title || "Topic Not Found"}>
  <div class="breadcrumbs">
    <a href="/">Home</a> &raquo; <a href="/forums">Forums</a> &raquo; <a href={`/forums/${forumId}`}>{forumTitle}</a> &raquo; {topic.title}
  </div>

  <div class="topic-header">
    <h1>{topic.title}</h1>
    <div class="topic-controls">
      {!topic.isLocked && (
        <a href={`/topics/${id}/reply`} class="btn btn-primary">Reply</a>
      )}
    </div>
  </div>

  <!-- Posts -->
  <div class="posts">
    {topic.posts.map((post, index) => (
      <div class="post" id={`post-${post.id}`}>
        <div class="post-header">
          <div class="post-info">Post #{index + 1} - {new Date(post.createdAt).toLocaleString()}</div>
          <div class="post-controls">
            <a href={`#post-${post.id}`} title="Link to this post">#</a>
            <a href={`/topics/${id}/quote/${post.id}`} title="Quote this post">Quote</a>
            {post.author.username === "Admin" && (
              <a href={`/topics/${id}/edit/${post.id}`} title="Edit this post">Edit</a>
            )}
          </div>
        </div>
        <div class="post-content">
          <div class="post-user">
            <div class="username">{post.author.username}</div>
            <div class="avatar">
              <img src={post.author.avatarUrl || "/images/avatars/default.png"} alt={`${post.author.username}'s avatar`} />
            </div>
            <div class="user-info">
              <div class="join-date">Joined: {new Date(post.author.createdAt).toLocaleDateString()}</div>
              <div class="post-count">Posts: {post.author.postsCount}</div>
            </div>
          </div>
          <div class="post-body">
            <div class="post-text" set:html={post.content} />
            {post.isEdited && <div class="edited-note">This post was edited on {new Date(post.editedAt).toLocaleString()}</div>}
            {post.author.signature && (
              <div class="signature">
                <hr />
                <p>{post.author.signature}</p>
              </div>
            )}
          </div>
        </div>
      </div>
    ))}
  </div>

  <!-- Reply Button at Bottom -->
  <div class="topic-footer">
    <div class="paginator">
      <a href="#" class="current">1</a>
    </div>
    {!topic.isLocked ? (
      <a href={`/topics/${id}/reply`} class="btn btn-primary">Reply</a>
    ) : (
      <div class="locked-notice">This topic is locked and cannot be replied to</div>
    )}
  </div>

  <style>
    .topic-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }

    .topic-header h1 {
      color: var(--secondary-color);
      font-size: 24px;
    }

    .posts {
      margin-bottom: 20px;
    }

    .post {
      margin-bottom: 20px;
    }

    .post-header {
      background-color: var(--post-header);
      padding: 8px 15px;
      display: flex;
      justify-content: space-between;
      border: 1px solid var(--border-color);
      font-size: 12px;
    }

    .post-controls a {
      margin-left: 10px;
      color: var(--link-color);
      text-decoration: none;
    }

    .post-controls a:hover {
      text-decoration: underline;
    }

    .post-content {
      display: flex;
      border: 1px solid var(--border-color);
      border-top: none;
      background-color: var(--post-bg);
    }

    .post-user {
      flex: 0 0 150px;
      padding: 15px;
      border-right: 1px solid var(--border-color);
      background-color: var(--forum-topic-alt);
      text-align: center;
    }

    .post-body {
      flex: 1;
      padding: 15px;
    }

    .username {
      font-weight: bold;
      font-size: 14px;
      margin-bottom: 10px;
    }

    .avatar img {
      max-width: 100px;
      height: auto;
      border: 1px solid var(--border-color);
      margin-bottom: 10px;
    }

    .user-info {
      font-size: 12px;
      color: #999;
    }

    .post-text {
      line-height: 1.6;
    }

    .post-text p {
      margin-bottom: 12px;
    }

    .post-text ul, .post-text ol {
      margin-bottom: 12px;
      margin-left: 20px;
    }

    .post-text h3, .post-text h4 {
      color: var(--secondary-color);
      margin: 15px 0 10px;
    }

    .signature {
      margin-top: 20px;
      font-size: 12px;
      color: #777;
      font-style: italic;
    }

    .signature hr {
      border: none;
      border-top: 1px solid var(--border-color);
      margin-bottom: 5px;
    }

    .edited-note {
      font-size: 11px;
      color: #666;
      font-style: italic;
      margin-top: 10px;
    }

    .topic-footer {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .locked-notice {
      background-color: rgba(138, 3, 3, 0.2);
      padding: 8px 15px;
      border: 1px solid var(--primary-color);
      border-radius: 3px;
    }
  </style>
</MainLayout>
